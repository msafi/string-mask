{
  "name": "@im-open/text-mask-all",
  "version": "0.3.0",
  "description": "Conforms string to given mask or pattern, and can be hooked up to input element",
  "main": "index.js",
  "private": true,
  "scripts": {
    "textMask:publish": "sh publish.sh",
    "website": "node website/server.js",
    "website:build": "npx webpack --config website/webpack.buildWebsite.js",
    "test": "npm run loud-lint && npm run core:test && npm run react:test && npm run vanilla:test && npm run vue:test && npm run addons:test",
    "build": "npm run core:build && npm run react:build && npm run vanilla:build && npm run vue:build && npm run website:build && npm run addons:build",
    "verify": "npm run core:verify && npm run react:verify && npm run vanilla:verify && npm run vue:verify && npm run addons:verify",
    "core:build": "npx webpack --config core/webpack.buildCore.js",
    "core:test": "npx mocha -r @babel/register -r ./common/domSetup.js --exit --recursive core/test ",
    "core:tdd": "npm run core:test -- --watch",
    "core:verify": "npm run core:test -- --verify",
    "core:publish": "sh core/publish.sh",
    "addons:build": "npx webpack -p --config addons/webpack.buildAddons.js",
    "addons:test": "npx mocha -r @babel/register -r ./common/domSetup.js --exit --recursive addons/test",
    "addons:tdd": "npm run addons:test -- --watch",
    "addons:verify": "npm run addons:test -- --verify",
    "addons:publish": "sh addons/publish.sh",
    "react:test": "npx mocha -r ./react/babel-register -r ./common/domSetup.js --exit --recursive ./react/test",
    "react:tdd": "npm run react:test -- --watch",
    "react:verify": "npm run react:test -- --verify",
    "react:watch": "npx webpack --watch --config ./react/webpack.buildReactIntegration.js",
    "react:dev": "node react/example/server.js",
    "react:build": "npx webpack --config ./react/webpack.buildReactIntegration.js",
    "react:publish": "sh react/publish.sh",
    "vanilla:dev": "npx webpack-dev-server --content-base vanilla/example --port 3000 --config vanilla/example/webpack.runVanillaExample.js",
    "vanilla:test": "npx mocha -r @babel/register -r ./common/domSetup.js --exit --recursive vanilla/test",
    "vanilla:tdd": "npm run vanilla:test -- --watch",
    "vanilla:verify": "npm run vanilla:test -- --verify",
    "vanilla:build": "npx webpack -p --config vanilla/webpack.buildVanillaIntegration.js",
    "vanilla:publish": "sh vanilla/publish.sh",
    "angular1:dev": "npx webpack-dev-server --content-base angular1/example --port 3000 --config angular1/example/webpack.runAngular1Example.js",
    "angular1:build": "npx webpack -p --config angular1/webpack.buildAngular1Integration.js",
    "angular1:publish": "sh angular1/publish.sh",
    "angular2:ci": "cd angular2 && npm i && npm run ci",
    "angular2:publish": "sh angular2/publish.sh",
    "ember:dev": "cd ember && ember server",
    "ember:test": "npm install && cd ember && npm install && ember test",
    "ember:publish": "sh ember/publish.sh",
    "vue:build": "npx webpack -p --config vue/webpack.buildVueDirective.js",
    "vue:publish": "sh vue/publish.sh",
    "vue:dev": "node_modules/.bin/webpack-dev-server --content-base vue/example --port 3000 --config vue/example/webpack.runVueExample.js",
    "vue:test": "npx mocha -r @babel/register -r ./common/domSetup.js --exit --recursive vue/test",
    "vue:tdd": "npm run vue:test -- --watch",
    "vue:verify": "npm run vue:test -- --verify",
    "git:done": "git checkout gh-pages && git rebase master && git checkout master && git push origin master --tags && git push origin gh-pages",
    "ci": "npm i && npm run test && npm run build && npm run verify",
    "loud-lint": "npx eslint . --ext .js --ext .jsx",
    "lint": "npx eslint . --ext .js --ext .jsx --fix || true"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/im-open/text-mask.git"
  },
  "author": "M.K. Safi <msafi@msafi.com>",
  "license": "Unlicense",
  "bugs": {
    "url": "https://github.com/im-open/text-mask/issues"
  },
  "homepage": "https://github.com/im-open/text-mask#readme",
  "greenkeeper": {
    "ignore": [
      "awesome-typescript-loader",
      "ts-node"
    ]
  },
  "devDependencies": {
    "@babel/cli": "^7.25.6",
    "@babel/core": "^7.25.2",
    "@babel/eslint-parser": "^7.25.1",
    "@babel/eslint-plugin": "^7.25.1",
    "@babel/plugin-transform-object-assign": "^7.24.7",
    "@babel/preset-env": "^7.25.4",
    "@babel/preset-react": "^7.24.7",
    "@babel/register": "^7.24.6",
    "@hot-loader/react-dom": "^17.0.2",
    "@reduxjs/toolkit": "^2.2.7",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.0",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^10.3.3",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.1",
    "@testing-library/react": "^12.1.5",
    "@testing-library/user-event": "^14.5.2",
    "angular": "^1.5.8",
    "babel-loader": "^8.3.0",
    "babel-plugin-rewire": "^1.2.0",
    "bootstrap": "^5.3.3",
    "bootstrap-sass": "^3.3.6",
    "chai": "^3.4.1",
    "classnames": "^2.2.3",
    "clean-webpack-plugin": "^4.0.0",
    "core-js": "^3.38.1",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "enzyme": "^3.11.0",
    "eslint": "^8.57.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-mocha": "^10.5.0",
    "eslint-plugin-promise": "^6.6.0",
    "eslint-plugin-react": "^7.35.2",
    "eslint-plugin-standard": "^2.0.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^4.5.2",
    "jsdom": "^25.0.0",
    "lodash": "^4.0.0",
    "mocha": "^10.7.3",
    "mocha-dynamic-tests": "^2.0.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-hot-loader": "^4.13.1",
    "react-redux": "^8.1.3",
    "redux": "^5.0.1",
    "redux-actions": "^3.0.3",
    "sass": "^1.78.0",
    "sass-loader": "^10.5.2",
    "semantic-release": "^24.1.1",
    "sinon": "^1.17.3",
    "stats-webpack-plugin": "^0.7.0",
    "style-loader": "^2.0.0",
    "terser-webpack-plugin": "^5.3.10",
    "url-loader": "^4.1.1",
    "vue": "^2.0.8",
    "vue-loader": "^17.4.2",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.2"
  },
  "keywords": [
    "text mask",
    "input mask",
    "string mask",
    "input formatting",
    "text formatting",
    "string formatting"
  ]
}
